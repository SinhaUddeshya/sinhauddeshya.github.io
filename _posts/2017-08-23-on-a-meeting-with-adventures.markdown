---
layout: post
title:  Professional Proficiency
date:   2018-06-22 13:32:20 +0300
description: Youâ€™ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. # Add post description (optional)
img: post-3.jpg 
# Add image post (optional)
tags: []
author: # Add name author (optional)
---
<p align="center"><span style="font-size:25px"><b>How often did your team scrum?</b></span></p>
<p> I would say often enough. Face to face communication among the team members was very good as we had a scrum mostly twice a week in every Software Engineering class and sometimes, even on thursdays if we felt the need. The purpose of scrum was simple - to inform everyone in the team about the progress made on the assigned user story, any obstacles faced in the process and future work. Scrum helped us to not only get aware of the work being performed by the fellow team mates but also to get an idea of whether we are heading towards the right direction and if the milestone would be completed in the given time frame. Generally when I had issues with my story, in the scrum i showed everyone my problem and asked for their advice. Sometimes, when I had more pressure from my other courses and I was unable to implement a feature before the specified deadline in case of a sprint, I conveyed the message to my team members in the scrum meetings. I made it up by working hard on the weekends and getting the feature work by the next class.<br>
We also had scrums just before every meeting with the client or with Adon. Scrum was a necessary evil specially before these meetings, since we needed to discuss about the points that we were going to mention our client and show her all the progress that we have made so far. We also decided upon a list of questions that we wanted to ask her. Whenever we felt that our current style of working is not helping or if a user story is not possible to be implemented within the time frame, we gathered together to rethink our strategy and change it. Soon enough, I developed a habit of asking my team members about their progress and also told them about my problems whenever I got a chance to meet them. For example, me and Hayden were in the same Advanced Networking course, so we often discussed about our progress and I did the same with Leighton. For me, scrum didn't make much sense in the mini-project maybe because my then team members didn't took it seriously at all. As always, we were encouraged by our instructors to participate in scrum every day. Although having a scrum everyday wasn't possible, I tried to get involved in all of the team meetings. It helped me a lot in understanding what tasks my team mates are currently working on and if I could help them with the problem they are facing, same goes for me as I discussed the obstacles that I faced along the way and asked if anyone could take a look and help me out.</p><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev8.PNG?raw=true)<br><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev9.PNG?raw=true)<br><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev10.PNG?raw=true)<br><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev19.PNG?raw=true)<br><br><br>
<p align="center"><span style="font-size:25px"><b>How well was your communication with the team?</b></span></p>
<p> We used slack for most of the team communication in addition to the face to face meetings. I think my communication with other team members was good but it could have been more better. To be honest, I wasn't very frequent in updating my team on slack but I attended almost all of the group scrums and discussed my problems there. We even tweaked gitlab settings so that it sends notification to our slack channel whenever a new issue is opened or an issue is closed by someone. This gave us an idea of what are the features that fellow team members are working on. If I had an issue with my code, I fired a message on slack asking for help from my team members. Slack proved to be very useful when the team members were scattered like on weekends and face to face communication was not possible for some reason. We even had reminders on slack so that if any team member forgot about the scheduled meeting, they can be reminded because usually someone posted a reminder just a day before the meeting. During the two week holidays, my communication with the team was broken although nothing major happened during that time but still. If I was not going to attend a group meeting or be present in the class, I put a message on slack informing my team members of my absence. Also, it was a good way to convey about my progress and impediments over slack if I'm absent in the team meetings. I think that my communication was not upto the optimal level but I tried to convey most of the important information.<br><br> 
</p>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/evi1.PNG?raw=true)<br><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev1.PNG?raw=true)<br><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev3.PNG?raw=true)<br><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev4.PNG?raw=true)<br><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev20.PNG?raw=true)<br><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev21.PNG?raw=true)<br><br><br>
<p align="center"><span style="font-size:25px"><b>How was the team's interaction with the client and was the client satisfied with the team's efforts?</b></span></p><br><br>
<p> We worked very closely with our client Lynette. We had meetings with Adon who acted as the middleman between our team and the client to get an idea of the things the client wanted to see in her web app. In addition to that, we even had meetings with our client face to face to show her the progress that we have made and asked for her opinion about it. In the meeting, our client praised the work that we have done and even mentioned that none of the teams who worked on this project before us had made any significant progress or made an effort to know the client needs. After the meeting, we had a scrum to decide on our future tasks and one of the team members took the responsibility of emailing the client every week to update her. For the progress tracking, we had sprints of two weeks time frame in which we decided the user stories to implement, focusing more on the priority tasks first which were given to us by our client. One thing that I felt was lacking is that we weren't given access to the live site and hence it was very difficult for the client to see the recent updates that we have put in place. I was very interested in putting up a security mechanism for the Meals on Wheels app and hence in my meeting with the client, I made sure to propose my idea to her. She agreed that an authentication system was very important for a critical application like this. I learned a lot of valuable things from this experience because it was an interaction with an actual client, the kind of thing that happens in a real corporate environment which was pretty cool. Another thing that I learned was that working with a client is not that big a deal as is portrayed in the corporate world because of all the conflicts between the client and the developer. Working on a real live project motivated me to approach the tasks even more efficiently specially when the client was so happy with our efforts.</p><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev3.PNG?raw=true)<br><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev13.PNG?raw=true)<br><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev29.PNG?raw=true)<br><br><br>
<p align="center"><span style="font-size:25px"><b>What if you couldn't complete your work and how did it reflected your team strategy?</b></span></p>
<p> We followed the sprint cycle for most of the work but sometimes I wasn't able to maybe attend a group meeting or finish the work assigned to me because of pressure from my other courses. I was very upfront about this with my teammates and tried to arrange a meeting with my team to discuss about this issue and what could be done. As mentioned in one of the Agile principles - that we need to reflect and tune accordingly and hence a group discussion about this was the best option. I didn't escape the group meetings that often but whenever I did, I just made sure to convey it to my team members. For example, because most of my peers (including myself) were busy during the submission of the Security assignment and most of the stories in the second sprint was left pending at the end of the time frame. Leighton just assumed that we were being lazy and put a message on slack that since we didn't get the work done we should have a one week sprint instead of two which we generally did. I had many stuff bundled up at that time, so I urged him to have a group meeting and try to resolve this issue before declaring the one-week sprint and maybe to extend the one week sprint depending on what everyone's opinion was. I felt that a team member should trust the other team member to finish the job.</p><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev22.PNG?raw=true)<br><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev23.PNG?raw=true)<br><br><br>
<p align="center"><span style="font-size:25px"><b>How did you ensure the code quality was acceptable and how well did you document your code?</b></span></p>
<p> It was suggested by our instructors to get in touch with students from the software testing class for testing the Web Application. Unfortunately, none of the testers who were initially interested performed any kind of testing on our websites and we didn't incorporate automated testing due to time constraints. At first, we thought to maybe use Selenium or Cypress for adding automated testing on our site because both of them were good options for testing javascript code. We had a group meeting to decide if we really need to use automated testing on our app. From the result of the group meeting, only Leighton was the one who had experience in Software testing using Selenium as he was familiar with the technology from his Software testing class the previous semester. So, we argued that it is better to continue working on our user stories and make it work rather than learn Selenium just for automated testing. As for me, for ensuring good quality of coding, I used online tools such as JSLint to check my javascript code quality. Another tool that I used was HTML formatter to obtain a clean simple version of my code. Unfortunately, there wasn't any quality testing tool for PugJS. I wasn't great at documenting the code but I managed to put some helpful information about the code. I learned that testing of code could be very helpful in improving the coding style and also to check a web application's resiliency that points out many ways in which the web application can fail and hence encourages developers to be more cautious and efficient.</p><br><br>
![Adam Blog - Imac](https://github.com/SinhaUddeshya/sinhauddeshya.github.io/blob/master/assets/img/ev28.PNG?raw=true)<br><br><br>
<p align="center"><span style="font-size:25px"><b>How did you deal with changing requirements?</b></span></p>
<p> Our project was stable for most part as in there wasn't many changes because we were following the client's requirements from the beginning. However, in the end, there was a feature to create an online ordering of food assigned to Hayden which wasn't completed on time and since one of the feature that I was working on was related to Hayden's one, so I had to leave out some of the stuff. I think that any changes late in the development phase were handled greatly by us. Another misfortune happened with my Phase 3 story when SQL injection prevention feature caused the web app to fail and I have to drop the feature in the end so that the web app doesn't crash. Since we used git to manage our code, it wasn't very difficult to revert back to the safe version which was working smoothly. Even late in the development phase, the flexible design of the web app allowed us to adapt to changing requirements very easily. I had a glimpse of what happens in a corporate world environment and how the group of people handle these last minute requirements very easily. I'm glad that we were able to accomodate all those changes very comfortably.</p>
